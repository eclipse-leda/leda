<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Eclipse Leda Documentation â€“ About Leda</title>
    <link>https://eclipse-leda.github.io/leda/docs/about/</link>
    <description>Recent content in About Leda on Eclipse Leda Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 09 May 2022 14:24:56 +0530</lastBuildDate>
    
	  <atom:link href="https://eclipse-leda.github.io/leda/docs/about/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Features</title>
      <link>https://eclipse-leda.github.io/leda/docs/about/features/</link>
      <pubDate>Mon, 09 May 2022 14:24:56 +0530</pubDate>
      
      <guid>https://eclipse-leda.github.io/leda/docs/about/features/</guid>
      <description>
        
        
        &lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Publish/Subscribe messaging infrastructure for cloud connectivity&lt;/strong&gt; by &lt;a href=&#34;https://github.com/eclipse-kanto/&#34;&gt;Eclipse Kanto&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;local messaging for applications and SDV system components via an MQTT message broker&lt;/li&gt;
&lt;li&gt;connection to a backend messaging hub, such as Azure IoT Hub or the IoT Suite&lt;/li&gt;
&lt;li&gt;device identification and authentication for cloud connectivity by using TLS device certificates&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Container runtime&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;An OCI-compliant container orchestration for vehicle applications and services by &lt;a href=&#34;https://github.com/eclipse-kanto/&#34;&gt;Eclipse Kanto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://containerd.io/&#34;&gt;containerd.io&lt;/a&gt; as the default container runtime. Both layers of container runtimes can be exchanged with other implementations&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;Vehicle Update Manager&lt;/strong&gt; to orchestrate deployments of Vehicle Applications, configurations and base operating system updates&lt;/li&gt;
&lt;li&gt;An example Vehicle Seat Service implementation to showcase
&lt;ul&gt;
&lt;li&gt;the &lt;a href=&#34;https://projects.eclipse.org/projects/automotive.velocitas&#34;&gt;Eclipse Velocitas&lt;/a&gt; programming model,&lt;/li&gt;
&lt;li&gt;the &lt;a href=&#34;https://github.com/eclipse/kuksa.val&#34;&gt;Eclipse Kuksa.VAL&lt;/a&gt; vehicle databroker and&lt;/li&gt;
&lt;li&gt;the &lt;a href=&#34;https://github.com/COVESA/vehicle_signal_specification&#34;&gt;Covesa Vehicle Signal Specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the communication with basic vehicle communication networks such as CAN-Bus (CAN Feeder)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;Self Update Agent&lt;/strong&gt; for firmware-over-the-air (FOTA) updates, using an A/B deployment strategy
&lt;ul&gt;
&lt;li&gt;Integration with &lt;a href=&#34;https://www.rauc.io/&#34;&gt;RAUC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;An &lt;a href=&#34;https://github.com/open-telemetry/&#34;&gt;OpenTelemetry collector&lt;/a&gt; and example configurations to collect and publish logs and metrics of containerized Vehicle Applications to the cloud backend for further processing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The features of the reusable build recipes implemented as an &lt;a href=&#34;https://www.openembedded.org&#34;&gt;OpenEmbedded&lt;/a&gt; metalayer &lt;code&gt;meta-leda&lt;/code&gt; are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build recipes for a &lt;a href=&#34;https://www.yoctoproject.org/&#34;&gt;Yocto&lt;/a&gt;-based distribution to build SDV-related software components&lt;/li&gt;
&lt;li&gt;Build recipes for customizations of the target device&amp;rsquo;s storage structure to enable A/B system updates&lt;/li&gt;
&lt;li&gt;Build recipes for pre-packaging container images into the device during the manufacturing process to minimize initial online provisioning time&lt;/li&gt;
&lt;li&gt;A customized minimal setup for use on constrained devices and a full setup with convenient developer tools&lt;/li&gt;
&lt;li&gt;Ready images for virtual devices, for automated testing and evaluation purposes, eg QEMU ARM-64&lt;/li&gt;
&lt;li&gt;Ready images for physical devices, for evaluation and demo purposes, eg Raspberry Pi 4&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Goals</title>
      <link>https://eclipse-leda.github.io/leda/docs/about/goals/</link>
      <pubDate>Mon, 09 May 2022 14:24:56 +0530</pubDate>
      
      <guid>https://eclipse-leda.github.io/leda/docs/about/goals/</guid>
      <description>
        
        
        &lt;p&gt;The project aims to provide &lt;strong&gt;an integration point for Open Source components for the Software Defined Vehicle&lt;/strong&gt;. For vehicle software systems, there are a lot of requirements to consider. Some of these requirements are taken into account for Leda&amp;rsquo;s quickstart setups, thereas some other requirements can only be met once in a production environment and by customizing the target device image.&lt;/p&gt;
&lt;p&gt;The following document will list some of these requirements and give an explanation on why they are met in the Leda quickstart distribution.&lt;/p&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Provide an example operating system and configuration for constrained in-vehicle devices&lt;/li&gt;
&lt;li&gt;Integrate software-defined-vehicle Open Source components to showcase the available features and their state of maturity&lt;/li&gt;
&lt;li&gt;Demonstrate the use and interaction of open protocols and specifications, such as
&lt;ul&gt;
&lt;li&gt;the specifications from the &lt;a href=&#34;https://www.covesa.global/&#34;&gt;The Connected Vehicle Systems Alliance (COVESA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenTelemetry specs and components&lt;/li&gt;
&lt;li&gt;Eclipse IoT related specifications for software rollouts and digital twin representations&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Roadmap</title>
      <link>https://eclipse-leda.github.io/leda/docs/about/roadmap/</link>
      <pubDate>Mon, 09 May 2022 14:24:56 +0530</pubDate>
      
      <guid>https://eclipse-leda.github.io/leda/docs/about/roadmap/</guid>
      <description>
        
        
        &lt;ul&gt;
&lt;li&gt;Initial Open Source contribution expected by Q2 2022 (Done)&lt;/li&gt;
&lt;li&gt;A first milestone build is expected end of 2022 (Done)&lt;/li&gt;
&lt;li&gt;Plan for the first release cycle to be created in Q1/2023&lt;/li&gt;
&lt;li&gt;Release cycles are planned every 3-6 months&lt;/li&gt;
&lt;li&gt;Release planning will be conducted together with corresponding Eclipse projects&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;backlog&#34;&gt;Backlog&lt;/h2&gt;
&lt;p&gt;The Leda team maintains a backlog roadmap using GitHub projects at &lt;a href=&#34;https://github.com/orgs/eclipse-leda/projects/1/views/1&#34;&gt;https://github.com/orgs/eclipse-leda/projects/1/views/1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;future-work&#34;&gt;Future Work&lt;/h2&gt;
&lt;p&gt;The project intends to be the integration and collaboration platform for Software defined Vehicle functionality.&lt;/p&gt;
&lt;p&gt;Exemplary future work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Migrate to official Eclipse Kanto releases for Cloud Connector, Container Management and Vehicle Update Manager&lt;/li&gt;
&lt;li&gt;Include reference implementations from the &lt;a href=&#34;https://projects.eclipse.org/working-group/eclipse-software-defined-vehicle&#34;&gt;Eclipse Software Defined Vehicle working group&lt;/a&gt; projects:
&lt;ul&gt;
&lt;li&gt;Eclipse Velocitas&lt;/li&gt;
&lt;li&gt;Eclipse Kuksa&lt;/li&gt;
&lt;li&gt;Eclipse SommR&lt;/li&gt;
&lt;li&gt;Eclipse Chariott&lt;/li&gt;
&lt;li&gt;Eclipse Backend function Bindings (BfB)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Include and showcase more features regarding development, operation and monitoring of Vehicle Services and Vehicle Applications&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have feedback, please use &lt;a href=&#34;https://github.com/eclipse-leda/&#34;&gt;GitHub Issues&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Architecture</title>
      <link>https://eclipse-leda.github.io/leda/docs/about/architecture/</link>
      <pubDate>Mon, 09 May 2022 14:24:56 +0530</pubDate>
      
      <guid>https://eclipse-leda.github.io/leda/docs/about/architecture/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;https://eclipse-leda.github.io/leda/leda/assets/leda-architecture-details.png&#34; alt=&#34;Architecture Overview&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Releases</title>
      <link>https://eclipse-leda.github.io/leda/docs/about/releases/</link>
      <pubDate>Wed, 12 Apr 2023 14:24:56 +0530</pubDate>
      
      <guid>https://eclipse-leda.github.io/leda/docs/about/releases/</guid>
      <description>
        
        
        &lt;p&gt;The Eclipse Leda project follows the Eclipse Release process.
Please see &lt;a href=&#34;https://www.eclipse.org/projects/handbook/#release&#34;&gt;Eclipse Project handbook&lt;/a&gt; for details about the process.&lt;/p&gt;
&lt;p&gt;The release plans overview for Eclipse Leda is available at &lt;a href=&#34;https://projects.eclipse.org/projects/automotive.leda/governance&#34;&gt;https://projects.eclipse.org/projects/automotive.leda/governance&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
